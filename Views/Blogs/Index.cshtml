@using TitanBlog.Models
@using TitanBlog.Services.Interfaces
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@model IPagedList<Blog>
@inject IImageService imageService

@{
    ViewData["Title"] = "Index";
}


<div class="container p-5">
    <h1 class="text-center">Index - Blogs</h1>

    <p>
        <a class="btn btn-outline-primary" asp-action="Create">Create New Blog</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>Image</th>
                <th>
                    @*@Html.DisplayNameFor(model => model.FirstOrDefault().Name)*@
                    @Html.DisplayName(" Blog Name")
                </th>
                <th>
                    @Html.DisplayName("Description")
                </th>
                <th>
                    @Html.DisplayName("Created Date")
                </th>
                <th>
                    @Html.DisplayName("Updated Date")
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <img src="@imageService.DecodeImage(item.ImageData, item.ImageType)" class="img-fluid" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Updated)
                    </td>

                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Page List Label -->
    <div class="row">
        <div class="col h3 text-center">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
    </div>

    <!-- Paged List Core -->
    <div class="row">
        <div class="col d-flex justify-content-center mb-5">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                new PagedListRenderOptions
                {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
        </div>
    </div>

</div>