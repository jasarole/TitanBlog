@using TitanBlog.Services.Interfaces

@model TitanBlog.Models.Blog
@inject IImageService imageService 

@{
    ViewData["Title"] = "Edit";
}

<div class="container p-5">
    <h1>Edit</h1>

    <h4>Blog</h4>
    <hr />
    <div class="row">
        <div class="col-md-6">
            <form asp-action="Edit" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="Created" />
                <input type="hidden" asp-for="ImageData" />
                <input type="hidden" asp-for="ImageType" />
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" rows="5" class="form-control"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Image" class="control-label"></label>
                    <input type="file" asp-for="Image" class="form-control-file" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
        <div class="col-md-6">
            <img src="@imageService.DecodeImage(Model.ImageData, Model.ImageType)" class="img-fluid" />
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}
