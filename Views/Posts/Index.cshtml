@using TitanBlog.Models
@using TitanBlog.Services.Interfaces
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@model IPagedList<Post>
@inject IImageService imageService

@{
    ViewData["Title"] = "Index";
}


<div class="container p-5">
    <h1 class="text-center">Published Posts</h1>

    <p>
        <a class="btn btn-outline-primary" asp-action="Create">Create New Post</a>
    </p>

    <div>
        <table class="table table-striped">
            <thead class="table-dark">
                <tr>
                    <th>Image</th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Blog)*@
                        Blog Name
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Abstract)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Created)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Updated)
                    </th>

                    @*Empty header for edit/details/delete links*@
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <img src="@imageService.DecodeImage(item.ImageData, item.ImageType)" class="img-fluid" />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Blog.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Abstract)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Created)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Updated)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-slug="@item.Slug">Edit</a> |
                            <a asp-action="Details" asp-route-slug="@item.Slug">Details</a> |
                            <a asp-action="Delete" asp-route-slug="@item.Slug">Delete</a>
                        </td>
                    </tr>
                    //}
                }
            </tbody>
        </table>
    </div>

    <!-- Page List Label -->
    <div class="row">
        <div class="col h3 text-center">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
    </div>

    <!-- Paged List Core -->
    <div class="row">
        <div class="col d-flex justify-content-center mb-5">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                new PagedListRenderOptions
                {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
        </div>
    </div>

</div>